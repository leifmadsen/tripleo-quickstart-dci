---
- name: launch the jumpbox
  hosts: localhost
  tasks:
    - assert:
        that:
          - "lookup('env', 'DCI_CLIENT_ID')"
          - "lookup('env', 'DCI_API_SECRET')"
        msg: "DCI_CLIENT_ID and DCI_API_SECRET must be defined"

- name: prepare the jumpbox
  hosts: jumpbox
  tasks:
    - name: install some extra packages
      package:
        name: '{{ item }}'
        state: present
      with_items:
        - https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
        - https://packages.distributed-ci.io/dci-release.el7.noarch.rpm
      become: True
    - block:
      - name: Copy the rpm to validate
        copy:
          src: '{{ rpm_to_gate }}'
          dest: '/tmp/{{ rpm_to_gate | basename }}'
      - name: Install the rpm to validate
        yum:
          name: '/tmp/{{ rpm_to_gate | basename }}'
          state: present
        become: True
      when: rpm_to_gate is defined and rpm_to_gate
    - name: install some extra packages
      package:
        name: '{{ item }}'
        state: present
      with_items:
        - tmux
        - git
        - python-virtualenv
        - vim
        - dci-ansible-agent
        - httpd
        - patch
      become: True

- name: configure dci-ansible-agent
  hosts: jumpbox
  tasks:
    - name: Create users and generate SSH keys
      user:
        name: "{{ item }}"
        generate_ssh_key: yes
      become: yes
      with_items:
        - cloud-user
        - dci-ansible-agent

    - name: Create the user .ssh directory
      file:
        path: '/home/{{ item }}/.ssh'
        owner: '{{ item }}'
        group:  '{{ item }}'
        mode: '0700'
        state: directory
      become: yes
      with_items:
        - cloud-user
        - dci-ansible-agent

    - name: Set the $USER/.ssh/config file
      copy:
        src: ssh_config
        dest: '/home/{{ item }}/.ssh/config'
        owner: '{{ item }}'
        group: '{{ item }}'
        mode: '0644'
      become: yes
      with_items:
        - cloud-user
        - dci-ansible-agent

    - name: Reuse dci-ansible-agent ssh key
      copy:
        remote_src: True
        src: '/home/dci-ansible-agent/.ssh/{{ item.name }}'
        dest: '/home/cloud-user/.ssh/{{ item.name }}'
        mode: '{{ item.mode }}'
        owner: cloud-user
        group: cloud-user
      become: yes
      with_items:
        - { name: id_rsa, mode: '0600'}
        - { name: id_rsa.pub, mode: '0644'}

    - name: Ensure cloud-user can auth itself on localhost
      shell: cat .ssh/id_rsa.pub >> /home/cloud-user/.ssh/authorized_keys
      become: yes
      become_user: cloud-user
    - name: Fetch the current quickstart.sh
      get_url:
        url: https://raw.githubusercontent.com/openstack/tripleo-quickstart/master/quickstart.sh
        dest: /home/cloud-user/quickstart.sh
        mode: 0644
      become: yes
      become_user: cloud-user
    - file:
        name: /var/lib/dci-ansible-agent/repos
        owner: cloud-user
        group: cloud-user
        state: directory
      become: yes
    - template:
        src: settings.j2
        dest: /etc/dci-ansible-agent/settings.yml
      become: yes
    - name: install the hooks (1/2)
      copy:
        src: hooks/teardown.yml
        dest: /etc/dci-ansible-agent/hooks/teardown.yml
      become: yes
    - name: install the hooks (2/2)
      copy:
        src: hooks/running.yml
        dest: /etc/dci-ansible-agent/hooks/running.yml
      become: yes
    - name: create the dcirc.sh file
      template:
        src: dcirc.j2
        dest: /etc/dci-ansible-agent/dcirc.sh
      become: yes
    - file:
        name: /etc/openstack
        state: directory
      become: yes
    - template:
        src: clouds.yaml.j2
        dest: /etc/openstack/clouds.yaml
      become: True
    - template:
        src: openrc.j2
        dest: /home/cloud-user/openrc.sh
      become: yes
      become_user: cloud-user
    - copy:
        src: internal-requirements.txt
        dest: /home/cloud-user/internal-requirements.txt
    - command: bash /home/cloud-user/quickstart.sh --install-deps

- name: extra settings to make he environment more friendly
  hosts: jumpbox
  tasks:
    - name: Install the motd
      copy:
        src: motd
        dest: /etc/motd
      become: yes
    - name: Install the bash_history
      copy:
        src: bash_history
        dest: /home/cloud-user/.bash_history
        owner: cloud-user
        group: cloud-user
        mode: '0700'
      become: yes


- name: run tripleo-quickstart
  hosts: jumpbox
  tasks:
#    - name: start the dci-ansible-agent systemd unit
#      systemd:
#        name: dci-ansible-agent
#        state: started
#        no_block: yes
#      become: yes
#
    - debug:
        msg: "You can now connect to your jumpbox with: ssh cloud-user@{{ hostvars.jumpbox.ansible_ssh_host }}"
